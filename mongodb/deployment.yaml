# to make this deployment available in an arbitrary namespace x execute
# kubectl apply -f ./deployment.yaml --namespace=x
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-d
  labels:
  # labels this deployment has so that other kubernetes objects can select to interact via matchLabels
    app: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
    # labels here select which pods are managed by this deployment(.yaml)
    # so they are matched against spec.template.metadata.lables
      app: mongodb
  template:
  # in this section a pod in this deployment is described
  # documatation @
  #   https://kubernetes.io/docs/concepts/workloads/pods/#what-is-a-pod
  #   https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
    metadata:
      labels:
      # labels the pods so they can be selected via matchLabels
        app: mongodb-pod
    spec:
      containers:
      # this pod holds a single container
      - name: mongodb-cont
        image: mongo # https://hub.docker.com/_/mongo
        ports:
        # ports listed here can be reached by any other container in the same pod via localhost
        # https://kubernetes.io/docs/concepts/workloads/pods/#pod-networking
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-sec # is matched against secret.yaml.metadata.name
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-sec # is matched against secret.yaml.metadata.name
              key: mongo-root-password


