# https://kubernetes.io/docs/concepts/services-networking/ingress/#what-is-ingress

# an ingress requires an ingress controller (which is a pod)
# on bare metal kubernetes installations there should/has to be a load balancer
# in between the the clients and the ingress controller
# e.g. a proxy server forwarding requests to the ingress controller
# for bare metal load balancers managed inside the kubernetes cluster head for https://metallb.universe.tf/concepts/
#               ┌──cluster────────────────────────────────────────────────────────────────────────┐
#               │                                                                       ┌────┐    │
#     ┌──────┐  │    ┌───────┐            routing rule         ┌───────┐           ┌───►│pod │    │
#     │client├──│───►│Ingress├────────────────────────────────►│Service├───────────┤    └────┘    │
#     └──────┘  │    └───────┘                                 └───────┘           │    ┌────┐    │
#               │                                                                  └───►│pod │    │
#               │                                                                       └────┘    │
#               └─────────────────────────────────────────────────────────────────────────────────┘
#
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongodb-express-ingress
spec:
  ingressClassName: traefik
  rules:
    - http:
        paths:
        - path: /mongodb
          pathType: Prefix
          backend: # sub directory name so e.g. myapp.com/backend/ would be what you would enter into the browser
            service:
              name: mongodb-express-s # refers to metadata.name of an internal service
              port:
                number: 8081 # refers to spec.ports.port of the selected service
